const cocoData = {
    "info": {
        "description": "coco from ISAT", 
        "version": null, 
        "year": null, 
        "contributor": null, 
        "date_created": null}, 
        "licenses": [{
            "url": null, 
            "id": 0, 
            "name": null}], 
        "images": [{
            "license": "", 
            "url": "", 
            "file_name": "p69.png", 
            "height": 11980, 
            "width": 8695, 
            "date_captured": "", 
            "id": 0}], 
        "annotations": [{
            "iscrowd": 0, 
            "image_id": 0, 
            "image_name": "p69.png", 
            "category_id": 1, 
            "id": 0, 
            "segmentation": [[5820.48, 5948.52, 5774.48, 5982.52, 5732.48, 6067.52, 5711.48, 6147.52, 5708.48, 6301.52, 5739.48, 6388.52, 5779.48, 6439.52, 5859.48, 6483.52, 5879.48, 6518.52, 5848.34, 6982.4, 5799.22, 7300.88, 5774.42, 7475.14, 5838.0, 7495.36, 5906.54, 7210.45, 6035.25, 6634.29, 6231.16, 6783.18, 6253.32, 6960.0, 6119.96, 7451.48, 6096.2, 7603.7, 6095.7, 7642.74, 6100.73, 7686.06, 6106.41, 7720.78, 6117.62, 7813.89, 6196.12, 7765.42, 6200.8, 7727.67, 6189.48, 7611.52, 6219.48, 7550.52, 6242.48, 7524.52, 6288.48, 7498.52, 6446.48, 7459.52, 6579.48, 7478.52, 6666.48, 7506.52, 6726.48, 7539.52, 6745.48, 7563.52, 6755.34, 7567.42, 6767.29, 7573.33, 6783.77, 7574.54, 6817.62, 7573.41, 6856.02, 7600.59, 6921.35, 7656.38, 6947.43, 7673.17, 6959.15, 7678.97, 6972.65, 7686.77, 6981.0, 7693.32, 6994.48, 7696.52, 7138.48, 7738.52, 7185.48, 7692.52, 7149.05, 7676.22, 7136.82, 7657.32, 7110.07, 7637.36, 7086.57, 7614.27, 7064.22, 7590.67, 7040.15, 7570.99, 6988.14, 7550.3, 6890.71, 7480.18, 6778.62, 7333.78, 7023.61, 7068.7, 7076.72, 6998.27, 7120.47, 6929.85, 7124.48, 6756.52, 7084.48, 6630.52, 7049.48, 6557.52, 6798.48, 6251.52, 6590.48, 6101.52, 6525.48, 6081.52, 6385.48, 6010.52, 6289.48, 6013.52, 6194.48, 6055.52, 6159.48, 6045.52, 6065.48, 5969.52, 5977.48, 5930.52, 5913.48, 5920.52]], 
            "area": 1534746.9440347068, 
            "bbox": [5707.975496868651, 5919.953403520001, 1477.8496366781192, 1894.3610510996195],
            "description":'在猕猴王身上行走的猴子'
        }, 
            {"iscrowd": false, 
                "image_id": 0, 
                "image_name": "p69.png", 
                "category_id": 1, 
                "id": 1, 
                "segmentation": [[2720.0, 6627.0, 2706.0, 6721.0, 2750.0, 7139.0, 2729.0, 7282.0, 2770.0, 7480.0, 2886.0, 7739.0, 3198.0, 8063.0, 3537.0, 8242.0, 3605.07, 8269.46, 3781.15, 8304.28, 3846.33, 8318.56, 3886.92, 8328.3, 3980.81, 8339.52, 4034.51, 8351.13, 4064.96, 8353.12, 4079.0, 8356.0, 4224.0, 8442.0, 4479.0, 8516.0, 4839.0, 8527.0, 4917.0, 8480.0, 5002.0, 8467.0, 5224.0, 8553.0, 5490.0, 8534.0, 5615.0, 8500.0, 5765.0, 8392.0, 5985.0, 8280.0, 6358.0, 8170.0, 6457.0, 8106.0, 6509.0, 8032.0, 6536.0, 7926.0, 6396.0, 7823.0, 6301.0, 7814.0, 6251.0, 7845.0, 6196.0, 7835.0, 6056.0, 7939.0, 5959.0, 7980.0, 5403.0, 8006.0, 5316.0, 7986.0, 5213.0, 7922.0, 4883.0, 7786.0, 4518.0, 7718.0, 4195.0, 7719.0, 4009.0, 7665.0, 3878.0, 7597.0, 3738.0, 7411.0, 3696.0, 7281.0, 3732.0, 7187.0, 3852.0, 7088.0, 3874.0, 7005.0, 3854.0, 6908.0, 3872.0, 6803.0, 3847.0, 6744.0, 3777.0, 6674.0, 3580.0, 6590.0, 3460.0, 6601.0, 3352.0, 6659.0, 3344.41, 6665.11, 3343.11, 6671.32, 3341.0, 6679.0, 3310.82, 6718.04, 3291.0, 6739.0, 3200.0, 6890.0, 3154.53, 6937.09, 3124.02, 6986.0, 3091.0, 7083.0, 3004.0, 7202.0, 2935.0, 7157.0, 2902.0, 7094.0, 2937.0, 6943.0, 2924.0, 6895.0, 2965.0, 6847.0, 2990.41, 6822.39, 3013.86, 6798.33, 3046.12, 6754.98, 3082.76, 6727.35, 3109.0, 6708.0, 3154.0, 6617.0, 3152.0, 6531.0, 3159.17, 6488.67, 3212.21, 6428.52, 3332.11, 6515.57, 3592.33, 6431.85, 3492.59, 6343.54, 3376.38, 6329.91, 3070.0, 6335.0, 2829.0, 6485.0]], 
                "area": 3076699.477763109, 
                "bbox": [2705.502747273539, 6329.414830665661, 3830.981781439282, 2224.0838986842555],
                "description":'猴王双脚用藤蔓缚于河边树上，双手抱住对岸的树'
            }, 
                {"iscrowd": false, 
                    "image_id": 0, 
                    "image_name": "p69.png", 
                    "category_id": 1, 
                    "id": 2, 
                    "segmentation": [[3757.09, 5638.23, 3710.09, 5713.23, 3658.09, 5868.23, 3663.46, 5901.65, 3675.96, 5956.72, 3697.09, 6150.23, 3758.09, 6381.23, 3897.09, 6497.23, 4000.09, 6531.23, 3909.09, 6580.23, 3874.09, 6761.23, 3887.09, 6815.23, 3944.09, 6827.23, 4001.09, 6881.23, 4085.09, 6913.23, 4289.09, 6942.23, 4431.09, 6918.23, 4680.09, 6762.23, 4717.09, 6766.23, 4757.09, 6802.23, 4703.09, 6881.23, 4589.09, 6949.23, 4528.09, 7047.23, 4471.09, 7194.23, 4434.09, 7381.23, 4346.09, 7522.23, 4164.07, 7649.65, 4155.6, 7688.49, 4169.44, 7716.44, 4274.09, 7731.23, 4471.09, 7681.23, 4648.09, 7400.23, 4769.09, 7250.23, 4835.09, 7218.23, 4876.97, 7191.57, 4937.09, 7148.23, 5069.09, 7132.23, 5227.09, 7167.23, 5319.03, 7212.08, 5327.09, 7324.23, 5385.09, 7457.23, 5502.09, 7564.23, 5724.09, 7670.23, 5982.38, 7753.13, 5955.43, 7783.63, 5985.66, 7816.69, 5850.12, 7912.9, 5840.9, 7986.43, 5988.21, 7980.6, 6100.83, 7890.78, 6193.16, 7828.98, 6189.44, 7826.49, 6185.49, 7816.42, 6156.42, 7800.73, 6076.99, 7723.29, 6011.94, 7687.54, 5956.16, 7634.59, 5904.09, 7585.23, 5848.09, 7513.23, 5772.09, 7486.23, 5684.09, 7393.23, 5628.09, 7283.23, 5602.84, 6822.49, 5487.09, 6676.23, 5293.09, 6528.23, 5135.09, 6376.23, 4881.09, 6223.23, 4781.09, 6222.23, 4612.09, 6165.23, 4611.09, 6064.23, 4591.09, 6019.23, 4507.78, 5886.57, 4468.71, 5852.15, 4387.38, 5816.87, 4189.13, 5834.48, 4084.09, 5993.23, 4089.02, 6035.69, 4118.89, 6268.6, 3877.92, 6201.63, 3837.09, 5986.23, 3824.09, 5874.23, 3868.09, 5736.23, 3952.04, 5656.0, 3810.99, 5589.0]], 
                    "area": 1925248.7715503946, 
                    "bbox": [3657.601153763252, 5588.336488270583, 2535.833760565798, 2398.5888825637876],
                    "description":'在猕猴王身上行走的猴子'
                }, 
                    {"iscrowd": false, 
                        "image_id": 0, 
                        "image_name": "p69.png", 
                        "category_id": 2, 
                        "id": 3, 
                        "segmentation": [[4243.33, 7995.27, 4119.28, 8083.93, 4076.06, 8115.22, 4012.81, 8188.39, 3957.48, 8306.23, 3861.97, 8413.75, 3776.51, 8487.45, 3665.07, 8531.04, 3516.04, 8558.37, 3494.04, 8593.37, 3560.04, 8629.37, 3742.04, 8593.37, 3873.29, 8507.5, 3928.76, 8463.62, 3979.0, 8426.9, 4011.13, 8385.04, 4062.87, 8313.99, 4077.06, 8244.37, 4162.95, 8130.68, 4279.42, 8076.41, 4360.44, 8072.43, 4458.3, 8094.99, 4552.59, 8158.84, 4598.86, 8205.29, 4641.97, 8277.95, 4680.3, 8316.88, 4702.16, 8333.13, 4796.62, 8414.37, 4793.12, 8584.37, 4701.04, 8971.37, 4639.04, 9096.37, 4627.04, 9198.37, 4536.04, 9146.37, 4436.04, 9001.37, 4276.04, 8865.37, 4262.88, 8861.56, 4245.48, 8857.93, 4202.85, 8854.99, 4166.81, 8848.28, 4112.04, 8840.37, 3880.04, 8843.37, 3750.04, 8954.37, 3705.04, 9101.37, 3723.04, 9190.37, 3894.04, 9360.37, 3958.04, 9518.37, 3884.04, 9572.37, 3802.14, 9661.28, 3683.04, 9765.37, 3549.04, 9933.37, 3493.04, 10046.37, 3515.04, 10168.37, 3564.04, 10188.37, 3661.04, 10162.37, 3843.04, 10026.37, 3888.04, 10032.37, 3877.04, 10264.37, 3783.04, 10510.37, 3736.04, 10886.37, 3794.04, 11073.37, 3886.04, 11155.37, 3920.89, 11221.42, 3942.36, 11245.82, 3958.4, 11256.55, 3960.94, 11264.36, 4113.39, 11326.98, 4145.29, 11343.15, 4078.03, 11645.53, 4071.04, 11825.37, 4082.04, 11980.37, 4250.04, 11980.37, 4299.04, 11624.37, 4360.04, 11570.37, 4489.04, 11585.37, 4674.39, 11627.86, 4747.3, 11645.43, 4809.04, 11669.37, 4962.04, 11712.37, 5143.04, 11808.37, 5376.04, 11821.37, 5443.04, 11784.37, 5485.04, 11584.37, 5448.04, 11356.37, 5450.04, 11023.37, 5395.04, 10700.37, 5398.04, 10511.37, 5350.04, 10352.37, 5291.04, 10267.37, 5042.42, 10332.82, 5063.8, 10255.65, 5028.44, 10152.74, 5008.35, 10083.47, 4996.91, 9984.7, 4990.68, 9848.27, 4984.39, 9732.19, 4977.77, 9655.08, 4943.39, 9456.32, 5123.25, 9358.62, 5186.8, 9304.64, 5224.88, 9163.39, 5251.27, 9063.63, 5259.04, 9003.37, 5247.04, 8826.37, 5229.86, 8790.14, 5213.85, 8758.66, 5186.37, 8708.83, 5142.04, 8628.37, 5014.04, 8431.37, 4812.04, 8208.37, 4655.04, 8136.37, 4494.04, 8022.37]], 
                        "area": 4360574.185770577, 
                        "bbox": [3492.5476745327765, 7994.575661244296, 1992.9856070001856, 3986.293496581905],
                        "description":'追捕的士兵'
                    }], 
                        "categories": [{
                            "name": "monkey", 
                            "id": 1, 
                            "supercategory": null}, {
                                "name": "person", 
                                "id": 2, 
                                "supercategory": null}]}




// 初始化画布
const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');
const infoBox = document.getElementById('info-box');

// 注释内容
const descriptions = [
    '猴王双脚用藤蔓缚于河边树上，双手抱住对岸的树。',
    '两只猴子在猕猴王身上行走。',
    '两只猴子在猕猴王身上行走。',
    '追捕的士兵'
];


// 加载图像
const img = new Image();
img.src = "clear_wallPainting\\p69.png";



// 图像加载完毕后执行
img.onload = () => {
    // 绘制图像
    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

    // 添加鼠标移动事件监听器
    canvas.addEventListener('mousemove', (event) => {
        const mouseX = event.offsetX;
        const mouseY = event.offsetY;

        let activeAnnotation = null;

        // 遍历每个注释
        cocoData.annotations.forEach(annotation => {
            const segmentation = annotation.segmentation[0];
            ctx.beginPath();
            for (let i = 0; i < segmentation.length; i += 2) {
                const x = (segmentation[i] / cocoData.images[0].width) * canvas.width;
                const y = (segmentation[i + 1] / cocoData.images[0].height) * canvas.height;
                ctx.lineTo(x, y);
            }
            ctx.closePath();

            // 检测鼠标是否在区域内
            if (ctx.isPointInPath(mouseX, mouseY)) {
                ctx.fillStyle = 'rgba(255, 0, 0, 0.5)'; // 高亮显示颜色
                activeAnnotation = annotation;
            } else {
                ctx.fillStyle = 'rgba(255, 0, 0, 0)'; // 取消高亮
            }

            ctx.clearRect(0, 0, canvas.width, canvas.height); // 清除画布
            ctx.drawImage(img, 0, 0, canvas.width, canvas.height); // 重绘图像

            // 绘制所有注释，显示高亮区域
            cocoData.annotations.forEach(annotation => {
                const segmentation = annotation.segmentation[0];
                ctx.beginPath();
                for (let i = 0; i < segmentation.length; i += 2) {
                    const x = (segmentation[i] / cocoData.images[0].width) * canvas.width;
                    const y = (segmentation[i + 1] / cocoData.images[0].height) * canvas.height;
                    if (i === 0) {
                        ctx.moveTo(x, y);
                    } else {
                        ctx.lineTo(x, y);
                    }
                }
                ctx.closePath();
                ctx.fillStyle = activeAnnotation === annotation ? 'rgba(255, 0, 0, 0.3)' : 'rgba(255, 0, 0, 0)'; // 高亮区域
                ctx.fill();

                // 显示注释信息
                if (activeAnnotation) {
                    const infoBoxX = mouseX + 10;
                    const infoBoxY = mouseY + 10;
                    infoBox.style.left = `${infoBoxX}px`;
                    infoBox.style.top = `${infoBoxY}px`;
                    infoBox.textContent = activeAnnotation.description; // 显示注释
                    infoBox.style.display = 'block';
                } else {
                    infoBox.style.display = 'none'; // 隐藏注释框
                }
            });
        });
    });

    // 添加点击事件监听器
    canvas.addEventListener('click', (event) => {
        const mouseX = event.offsetX;
        const mouseY = event.offsetY;

        cocoData.annotations.forEach(annotation => {
            const segmentation = annotation.segmentation[0];
            ctx.beginPath();
            for (let i = 0; i < segmentation.length; i += 2) {
                const x = (segmentation[i] / cocoData.images[0].width) * canvas.width;
                const y = (segmentation[i + 1] / cocoData.images[0].height) * canvas.height;
                ctx.lineTo(x, y);
            }
            ctx.closePath();

            if (ctx.isPointInPath(mouseX, mouseY)) {
                infoBox.textContent = annotation.description; // 显示解释
            }
        });
    });
};